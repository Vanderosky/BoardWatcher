// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BoardWatcher.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using BoardWatcher;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\_Imports.razor"
using BoardWatcher.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\Pages\Chess.razor"
using BoardWatcher.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/chess")]
    public partial class Chess : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 156 "C:\Users\Vander\Documents\Programming\C#\BoardWatcher\Pages\Chess.razor"
       
    private Piece[] gameBoard;
    private Move[] MovesHistory;
    private int moveCounter;
    protected override async Task OnInitializedAsync()
    {
        gameBoard = await GameStateService.GetPieceData();
        moveCounter = 0;
        Move[] moves = new Move[]
        {
            new Move(1 ,48, 40),
            new Move(1, 9, 17),
            new Move(1, 50, 42),
            new Move(4, 2, 16),
            new Move(3 ,62, 47),
            new Move(4, 16, 52)
        };
        MovesHistory = moves;
    }


    public void moveForward()
    {
        Move currentMove = MovesHistory[moveCounter];
        this.gameBoard[currentMove.toField] = this.gameBoard[currentMove.fromField];
        this.gameBoard[currentMove.fromField] = getClearField();
        if (moveCounter < MovesHistory.Length - 1) moveCounter++;
    }
    public void moveBackwards()
    {
        if (moveCounter > 0) moveCounter--;
    }

    public void moveFastForward()
    {
        moveCounter = MovesHistory.Length;
    }

    public void moveFastBackwards()
    {
        moveCounter = 0;
    }

    public Piece getClearField()
    {
        return new Piece(0, false);
    }

    public string getMoveInNotation(Move move)
    {
        string fieldName = "";
        fieldName += getPieceName(move.pieceId);
        fieldName += ((char)(move.toField % 8 + 97));
        fieldName += (8 - move.toField / 8).ToString();
        return fieldName;
    }

    public async void DownloadFile()
    {
        string fileContent = "";
        foreach (Move move in MovesHistory)
        {
            fileContent += @getMoveInNotation(move);
            fileContent += " ";
        }
        await JSRuntime.InvokeAsync<object>( "FileSave", "PGN", fileContent);
    }

    public string getPieceName(int pieceId)
    {
        switch (pieceId)
        {
            case 0:
                return "";
            case 1:
                return ""; // pawn
            case 2:
                return "R"; // rook
            case 3:
                return "N"; // knight
            case 4:
                return "B"; // bishop
            case 5:
                return "Q"; // queen
            case 6:
                return "K"; // king
        }
        return "";
    }

    public string GetPiece(Piece piece)
    {
        if (piece.Color)
        {
            switch (piece.Id)
            {
                case 1:
                    return "♙";
                case 2:
                    return "♖";
                case 3:
                    return "♘";
                case 4:
                    return "♗";
                case 5:
                    return "♕";
                case 6:
                    return "♔";
                default:
                    return "";
            }
        }
        else
        {
            switch (piece.Id)
            {
                case 1:
                    return "♟";
                case 2:
                    return "♜";
                case 3:
                    return "♞";
                case 4:
                    return "♝";
                case 5:
                    return "♛";
                case 6:
                    return "♚";
                default:
                    return "";
            }
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ChessGameStateService GameStateService { get; set; }
    }
}
#pragma warning restore 1591
